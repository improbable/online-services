// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: gateway/gateway.proto
// </auto-generated>
#pragma warning disable 0414, 1591
#region Designer generated code

using grpc = global::Grpc.Core;

namespace Improbable.OnlineServices.Proto.Gateway {
  public static partial class GatewayService
  {
    static readonly string __ServiceName = "gateway.GatewayService";

    static readonly grpc::Marshaller<global::Improbable.OnlineServices.Proto.Gateway.JoinRequest> __Marshaller_gateway_JoinRequest = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Improbable.OnlineServices.Proto.Gateway.JoinRequest.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::Improbable.OnlineServices.Proto.Gateway.JoinResponse> __Marshaller_gateway_JoinResponse = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Improbable.OnlineServices.Proto.Gateway.JoinResponse.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::Improbable.OnlineServices.Proto.Gateway.GetJoinStatusRequest> __Marshaller_gateway_GetJoinStatusRequest = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Improbable.OnlineServices.Proto.Gateway.GetJoinStatusRequest.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::Improbable.OnlineServices.Proto.Gateway.GetJoinStatusResponse> __Marshaller_gateway_GetJoinStatusResponse = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Improbable.OnlineServices.Proto.Gateway.GetJoinStatusResponse.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::Improbable.OnlineServices.Proto.Gateway.CancelJoinRequest> __Marshaller_gateway_CancelJoinRequest = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Improbable.OnlineServices.Proto.Gateway.CancelJoinRequest.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::Improbable.OnlineServices.Proto.Gateway.CancelJoinResponse> __Marshaller_gateway_CancelJoinResponse = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Improbable.OnlineServices.Proto.Gateway.CancelJoinResponse.Parser.ParseFrom);

    static readonly grpc::Method<global::Improbable.OnlineServices.Proto.Gateway.JoinRequest, global::Improbable.OnlineServices.Proto.Gateway.JoinResponse> __Method_Join = new grpc::Method<global::Improbable.OnlineServices.Proto.Gateway.JoinRequest, global::Improbable.OnlineServices.Proto.Gateway.JoinResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "Join",
        __Marshaller_gateway_JoinRequest,
        __Marshaller_gateway_JoinResponse);

    static readonly grpc::Method<global::Improbable.OnlineServices.Proto.Gateway.GetJoinStatusRequest, global::Improbable.OnlineServices.Proto.Gateway.GetJoinStatusResponse> __Method_GetJoinStatus = new grpc::Method<global::Improbable.OnlineServices.Proto.Gateway.GetJoinStatusRequest, global::Improbable.OnlineServices.Proto.Gateway.GetJoinStatusResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetJoinStatus",
        __Marshaller_gateway_GetJoinStatusRequest,
        __Marshaller_gateway_GetJoinStatusResponse);

    static readonly grpc::Method<global::Improbable.OnlineServices.Proto.Gateway.CancelJoinRequest, global::Improbable.OnlineServices.Proto.Gateway.CancelJoinResponse> __Method_CancelJoin = new grpc::Method<global::Improbable.OnlineServices.Proto.Gateway.CancelJoinRequest, global::Improbable.OnlineServices.Proto.Gateway.CancelJoinResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "CancelJoin",
        __Marshaller_gateway_CancelJoinRequest,
        __Marshaller_gateway_CancelJoinResponse);

    /// <summary>Service descriptor</summary>
    public static global::Google.Protobuf.Reflection.ServiceDescriptor Descriptor
    {
      get { return global::Improbable.OnlineServices.Proto.Gateway.GatewayReflection.Descriptor.Services[0]; }
    }

    /// <summary>Base class for server-side implementations of GatewayService</summary>
    [grpc::BindServiceMethod(typeof(GatewayService), "BindService")]
    public abstract partial class GatewayServiceBase
    {
      public virtual global::System.Threading.Tasks.Task<global::Improbable.OnlineServices.Proto.Gateway.JoinResponse> Join(global::Improbable.OnlineServices.Proto.Gateway.JoinRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task<global::Improbable.OnlineServices.Proto.Gateway.GetJoinStatusResponse> GetJoinStatus(global::Improbable.OnlineServices.Proto.Gateway.GetJoinStatusRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task<global::Improbable.OnlineServices.Proto.Gateway.CancelJoinResponse> CancelJoin(global::Improbable.OnlineServices.Proto.Gateway.CancelJoinRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

    }

    /// <summary>Client for GatewayService</summary>
    public partial class GatewayServiceClient : grpc::ClientBase<GatewayServiceClient>
    {
      /// <summary>Creates a new client for GatewayService</summary>
      /// <param name="channel">The channel to use to make remote calls.</param>
      public GatewayServiceClient(grpc::Channel channel) : base(channel)
      {
      }
      /// <summary>Creates a new client for GatewayService that uses a custom <c>CallInvoker</c>.</summary>
      /// <param name="callInvoker">The callInvoker to use to make remote calls.</param>
      public GatewayServiceClient(grpc::CallInvoker callInvoker) : base(callInvoker)
      {
      }
      /// <summary>Protected parameterless constructor to allow creation of test doubles.</summary>
      protected GatewayServiceClient() : base()
      {
      }
      /// <summary>Protected constructor to allow creation of configured clients.</summary>
      /// <param name="configuration">The client configuration.</param>
      protected GatewayServiceClient(ClientBaseConfiguration configuration) : base(configuration)
      {
      }

      public virtual global::Improbable.OnlineServices.Proto.Gateway.JoinResponse Join(global::Improbable.OnlineServices.Proto.Gateway.JoinRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return Join(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::Improbable.OnlineServices.Proto.Gateway.JoinResponse Join(global::Improbable.OnlineServices.Proto.Gateway.JoinRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_Join, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::Improbable.OnlineServices.Proto.Gateway.JoinResponse> JoinAsync(global::Improbable.OnlineServices.Proto.Gateway.JoinRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return JoinAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::Improbable.OnlineServices.Proto.Gateway.JoinResponse> JoinAsync(global::Improbable.OnlineServices.Proto.Gateway.JoinRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_Join, null, options, request);
      }
      public virtual global::Improbable.OnlineServices.Proto.Gateway.GetJoinStatusResponse GetJoinStatus(global::Improbable.OnlineServices.Proto.Gateway.GetJoinStatusRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetJoinStatus(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::Improbable.OnlineServices.Proto.Gateway.GetJoinStatusResponse GetJoinStatus(global::Improbable.OnlineServices.Proto.Gateway.GetJoinStatusRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetJoinStatus, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::Improbable.OnlineServices.Proto.Gateway.GetJoinStatusResponse> GetJoinStatusAsync(global::Improbable.OnlineServices.Proto.Gateway.GetJoinStatusRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetJoinStatusAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::Improbable.OnlineServices.Proto.Gateway.GetJoinStatusResponse> GetJoinStatusAsync(global::Improbable.OnlineServices.Proto.Gateway.GetJoinStatusRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetJoinStatus, null, options, request);
      }
      public virtual global::Improbable.OnlineServices.Proto.Gateway.CancelJoinResponse CancelJoin(global::Improbable.OnlineServices.Proto.Gateway.CancelJoinRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return CancelJoin(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::Improbable.OnlineServices.Proto.Gateway.CancelJoinResponse CancelJoin(global::Improbable.OnlineServices.Proto.Gateway.CancelJoinRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_CancelJoin, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::Improbable.OnlineServices.Proto.Gateway.CancelJoinResponse> CancelJoinAsync(global::Improbable.OnlineServices.Proto.Gateway.CancelJoinRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return CancelJoinAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::Improbable.OnlineServices.Proto.Gateway.CancelJoinResponse> CancelJoinAsync(global::Improbable.OnlineServices.Proto.Gateway.CancelJoinRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_CancelJoin, null, options, request);
      }
      /// <summary>Creates a new instance of client from given <c>ClientBaseConfiguration</c>.</summary>
      protected override GatewayServiceClient NewInstance(ClientBaseConfiguration configuration)
      {
        return new GatewayServiceClient(configuration);
      }
    }

    /// <summary>Creates service definition that can be registered with a server</summary>
    /// <param name="serviceImpl">An object implementing the server-side handling logic.</param>
    public static grpc::ServerServiceDefinition BindService(GatewayServiceBase serviceImpl)
    {
      return grpc::ServerServiceDefinition.CreateBuilder()
          .AddMethod(__Method_Join, serviceImpl.Join)
          .AddMethod(__Method_GetJoinStatus, serviceImpl.GetJoinStatus)
          .AddMethod(__Method_CancelJoin, serviceImpl.CancelJoin).Build();
    }

    /// <summary>Register service method with a service binder with or without implementation. Useful when customizing the  service binding logic.
    /// Note: this method is part of an experimental API that can change or be removed without any prior notice.</summary>
    /// <param name="serviceBinder">Service methods will be bound by calling <c>AddMethod</c> on this object.</param>
    /// <param name="serviceImpl">An object implementing the server-side handling logic.</param>
    public static void BindService(grpc::ServiceBinderBase serviceBinder, GatewayServiceBase serviceImpl)
    {
      serviceBinder.AddMethod(__Method_Join, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Improbable.OnlineServices.Proto.Gateway.JoinRequest, global::Improbable.OnlineServices.Proto.Gateway.JoinResponse>(serviceImpl.Join));
      serviceBinder.AddMethod(__Method_GetJoinStatus, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Improbable.OnlineServices.Proto.Gateway.GetJoinStatusRequest, global::Improbable.OnlineServices.Proto.Gateway.GetJoinStatusResponse>(serviceImpl.GetJoinStatus));
      serviceBinder.AddMethod(__Method_CancelJoin, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Improbable.OnlineServices.Proto.Gateway.CancelJoinRequest, global::Improbable.OnlineServices.Proto.Gateway.CancelJoinResponse>(serviceImpl.CancelJoin));
    }

  }
}
#endregion
