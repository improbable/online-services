// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: party/invite.proto
// </auto-generated>
#pragma warning disable 0414, 1591
#region Designer generated code

using grpc = global::Grpc.Core;

namespace Improbable.OnlineServices.Proto.Invite {
  public static partial class InviteService
  {
    static readonly string __ServiceName = "invite.InviteService";

    static readonly grpc::Marshaller<global::Improbable.OnlineServices.Proto.Invite.CreateInviteRequest> __Marshaller_invite_CreateInviteRequest = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Improbable.OnlineServices.Proto.Invite.CreateInviteRequest.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::Improbable.OnlineServices.Proto.Invite.CreateInviteResponse> __Marshaller_invite_CreateInviteResponse = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Improbable.OnlineServices.Proto.Invite.CreateInviteResponse.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::Improbable.OnlineServices.Proto.Invite.DeleteInviteRequest> __Marshaller_invite_DeleteInviteRequest = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Improbable.OnlineServices.Proto.Invite.DeleteInviteRequest.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::Improbable.OnlineServices.Proto.Invite.DeleteInviteResponse> __Marshaller_invite_DeleteInviteResponse = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Improbable.OnlineServices.Proto.Invite.DeleteInviteResponse.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::Improbable.OnlineServices.Proto.Invite.UpdateInviteRequest> __Marshaller_invite_UpdateInviteRequest = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Improbable.OnlineServices.Proto.Invite.UpdateInviteRequest.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::Improbable.OnlineServices.Proto.Invite.UpdateInviteResponse> __Marshaller_invite_UpdateInviteResponse = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Improbable.OnlineServices.Proto.Invite.UpdateInviteResponse.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::Improbable.OnlineServices.Proto.Invite.GetInviteRequest> __Marshaller_invite_GetInviteRequest = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Improbable.OnlineServices.Proto.Invite.GetInviteRequest.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::Improbable.OnlineServices.Proto.Invite.GetInviteResponse> __Marshaller_invite_GetInviteResponse = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Improbable.OnlineServices.Proto.Invite.GetInviteResponse.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::Improbable.OnlineServices.Proto.Invite.ListAllInvitesRequest> __Marshaller_invite_ListAllInvitesRequest = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Improbable.OnlineServices.Proto.Invite.ListAllInvitesRequest.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::Improbable.OnlineServices.Proto.Invite.ListAllInvitesResponse> __Marshaller_invite_ListAllInvitesResponse = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Improbable.OnlineServices.Proto.Invite.ListAllInvitesResponse.Parser.ParseFrom);

    static readonly grpc::Method<global::Improbable.OnlineServices.Proto.Invite.CreateInviteRequest, global::Improbable.OnlineServices.Proto.Invite.CreateInviteResponse> __Method_CreateInvite = new grpc::Method<global::Improbable.OnlineServices.Proto.Invite.CreateInviteRequest, global::Improbable.OnlineServices.Proto.Invite.CreateInviteResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "CreateInvite",
        __Marshaller_invite_CreateInviteRequest,
        __Marshaller_invite_CreateInviteResponse);

    static readonly grpc::Method<global::Improbable.OnlineServices.Proto.Invite.DeleteInviteRequest, global::Improbable.OnlineServices.Proto.Invite.DeleteInviteResponse> __Method_DeleteInvite = new grpc::Method<global::Improbable.OnlineServices.Proto.Invite.DeleteInviteRequest, global::Improbable.OnlineServices.Proto.Invite.DeleteInviteResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "DeleteInvite",
        __Marshaller_invite_DeleteInviteRequest,
        __Marshaller_invite_DeleteInviteResponse);

    static readonly grpc::Method<global::Improbable.OnlineServices.Proto.Invite.UpdateInviteRequest, global::Improbable.OnlineServices.Proto.Invite.UpdateInviteResponse> __Method_UpdateInvite = new grpc::Method<global::Improbable.OnlineServices.Proto.Invite.UpdateInviteRequest, global::Improbable.OnlineServices.Proto.Invite.UpdateInviteResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "UpdateInvite",
        __Marshaller_invite_UpdateInviteRequest,
        __Marshaller_invite_UpdateInviteResponse);

    static readonly grpc::Method<global::Improbable.OnlineServices.Proto.Invite.GetInviteRequest, global::Improbable.OnlineServices.Proto.Invite.GetInviteResponse> __Method_GetInvite = new grpc::Method<global::Improbable.OnlineServices.Proto.Invite.GetInviteRequest, global::Improbable.OnlineServices.Proto.Invite.GetInviteResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetInvite",
        __Marshaller_invite_GetInviteRequest,
        __Marshaller_invite_GetInviteResponse);

    static readonly grpc::Method<global::Improbable.OnlineServices.Proto.Invite.ListAllInvitesRequest, global::Improbable.OnlineServices.Proto.Invite.ListAllInvitesResponse> __Method_ListAllInvites = new grpc::Method<global::Improbable.OnlineServices.Proto.Invite.ListAllInvitesRequest, global::Improbable.OnlineServices.Proto.Invite.ListAllInvitesResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "ListAllInvites",
        __Marshaller_invite_ListAllInvitesRequest,
        __Marshaller_invite_ListAllInvitesResponse);

    /// <summary>Service descriptor</summary>
    public static global::Google.Protobuf.Reflection.ServiceDescriptor Descriptor
    {
      get { return global::Improbable.OnlineServices.Proto.Invite.InviteReflection.Descriptor.Services[0]; }
    }

    /// <summary>Base class for server-side implementations of InviteService</summary>
    [grpc::BindServiceMethod(typeof(InviteService), "BindService")]
    public abstract partial class InviteServiceBase
    {
      public virtual global::System.Threading.Tasks.Task<global::Improbable.OnlineServices.Proto.Invite.CreateInviteResponse> CreateInvite(global::Improbable.OnlineServices.Proto.Invite.CreateInviteRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task<global::Improbable.OnlineServices.Proto.Invite.DeleteInviteResponse> DeleteInvite(global::Improbable.OnlineServices.Proto.Invite.DeleteInviteRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Updates the metadata and current status. Sender, receiver and party id are ignored.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      public virtual global::System.Threading.Tasks.Task<global::Improbable.OnlineServices.Proto.Invite.UpdateInviteResponse> UpdateInvite(global::Improbable.OnlineServices.Proto.Invite.UpdateInviteRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task<global::Improbable.OnlineServices.Proto.Invite.GetInviteResponse> GetInvite(global::Improbable.OnlineServices.Proto.Invite.GetInviteRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task<global::Improbable.OnlineServices.Proto.Invite.ListAllInvitesResponse> ListAllInvites(global::Improbable.OnlineServices.Proto.Invite.ListAllInvitesRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

    }

    /// <summary>Client for InviteService</summary>
    public partial class InviteServiceClient : grpc::ClientBase<InviteServiceClient>
    {
      /// <summary>Creates a new client for InviteService</summary>
      /// <param name="channel">The channel to use to make remote calls.</param>
      public InviteServiceClient(grpc::Channel channel) : base(channel)
      {
      }
      /// <summary>Creates a new client for InviteService that uses a custom <c>CallInvoker</c>.</summary>
      /// <param name="callInvoker">The callInvoker to use to make remote calls.</param>
      public InviteServiceClient(grpc::CallInvoker callInvoker) : base(callInvoker)
      {
      }
      /// <summary>Protected parameterless constructor to allow creation of test doubles.</summary>
      protected InviteServiceClient() : base()
      {
      }
      /// <summary>Protected constructor to allow creation of configured clients.</summary>
      /// <param name="configuration">The client configuration.</param>
      protected InviteServiceClient(ClientBaseConfiguration configuration) : base(configuration)
      {
      }

      public virtual global::Improbable.OnlineServices.Proto.Invite.CreateInviteResponse CreateInvite(global::Improbable.OnlineServices.Proto.Invite.CreateInviteRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return CreateInvite(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::Improbable.OnlineServices.Proto.Invite.CreateInviteResponse CreateInvite(global::Improbable.OnlineServices.Proto.Invite.CreateInviteRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_CreateInvite, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::Improbable.OnlineServices.Proto.Invite.CreateInviteResponse> CreateInviteAsync(global::Improbable.OnlineServices.Proto.Invite.CreateInviteRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return CreateInviteAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::Improbable.OnlineServices.Proto.Invite.CreateInviteResponse> CreateInviteAsync(global::Improbable.OnlineServices.Proto.Invite.CreateInviteRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_CreateInvite, null, options, request);
      }
      public virtual global::Improbable.OnlineServices.Proto.Invite.DeleteInviteResponse DeleteInvite(global::Improbable.OnlineServices.Proto.Invite.DeleteInviteRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return DeleteInvite(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::Improbable.OnlineServices.Proto.Invite.DeleteInviteResponse DeleteInvite(global::Improbable.OnlineServices.Proto.Invite.DeleteInviteRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_DeleteInvite, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::Improbable.OnlineServices.Proto.Invite.DeleteInviteResponse> DeleteInviteAsync(global::Improbable.OnlineServices.Proto.Invite.DeleteInviteRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return DeleteInviteAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::Improbable.OnlineServices.Proto.Invite.DeleteInviteResponse> DeleteInviteAsync(global::Improbable.OnlineServices.Proto.Invite.DeleteInviteRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_DeleteInvite, null, options, request);
      }
      /// <summary>
      /// Updates the metadata and current status. Sender, receiver and party id are ignored.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      public virtual global::Improbable.OnlineServices.Proto.Invite.UpdateInviteResponse UpdateInvite(global::Improbable.OnlineServices.Proto.Invite.UpdateInviteRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return UpdateInvite(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Updates the metadata and current status. Sender, receiver and party id are ignored.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      public virtual global::Improbable.OnlineServices.Proto.Invite.UpdateInviteResponse UpdateInvite(global::Improbable.OnlineServices.Proto.Invite.UpdateInviteRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_UpdateInvite, null, options, request);
      }
      /// <summary>
      /// Updates the metadata and current status. Sender, receiver and party id are ignored.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      public virtual grpc::AsyncUnaryCall<global::Improbable.OnlineServices.Proto.Invite.UpdateInviteResponse> UpdateInviteAsync(global::Improbable.OnlineServices.Proto.Invite.UpdateInviteRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return UpdateInviteAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Updates the metadata and current status. Sender, receiver and party id are ignored.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      public virtual grpc::AsyncUnaryCall<global::Improbable.OnlineServices.Proto.Invite.UpdateInviteResponse> UpdateInviteAsync(global::Improbable.OnlineServices.Proto.Invite.UpdateInviteRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_UpdateInvite, null, options, request);
      }
      public virtual global::Improbable.OnlineServices.Proto.Invite.GetInviteResponse GetInvite(global::Improbable.OnlineServices.Proto.Invite.GetInviteRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetInvite(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::Improbable.OnlineServices.Proto.Invite.GetInviteResponse GetInvite(global::Improbable.OnlineServices.Proto.Invite.GetInviteRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetInvite, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::Improbable.OnlineServices.Proto.Invite.GetInviteResponse> GetInviteAsync(global::Improbable.OnlineServices.Proto.Invite.GetInviteRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetInviteAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::Improbable.OnlineServices.Proto.Invite.GetInviteResponse> GetInviteAsync(global::Improbable.OnlineServices.Proto.Invite.GetInviteRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetInvite, null, options, request);
      }
      public virtual global::Improbable.OnlineServices.Proto.Invite.ListAllInvitesResponse ListAllInvites(global::Improbable.OnlineServices.Proto.Invite.ListAllInvitesRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ListAllInvites(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::Improbable.OnlineServices.Proto.Invite.ListAllInvitesResponse ListAllInvites(global::Improbable.OnlineServices.Proto.Invite.ListAllInvitesRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_ListAllInvites, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::Improbable.OnlineServices.Proto.Invite.ListAllInvitesResponse> ListAllInvitesAsync(global::Improbable.OnlineServices.Proto.Invite.ListAllInvitesRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ListAllInvitesAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::Improbable.OnlineServices.Proto.Invite.ListAllInvitesResponse> ListAllInvitesAsync(global::Improbable.OnlineServices.Proto.Invite.ListAllInvitesRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_ListAllInvites, null, options, request);
      }
      /// <summary>Creates a new instance of client from given <c>ClientBaseConfiguration</c>.</summary>
      protected override InviteServiceClient NewInstance(ClientBaseConfiguration configuration)
      {
        return new InviteServiceClient(configuration);
      }
    }

    /// <summary>Creates service definition that can be registered with a server</summary>
    /// <param name="serviceImpl">An object implementing the server-side handling logic.</param>
    public static grpc::ServerServiceDefinition BindService(InviteServiceBase serviceImpl)
    {
      return grpc::ServerServiceDefinition.CreateBuilder()
          .AddMethod(__Method_CreateInvite, serviceImpl.CreateInvite)
          .AddMethod(__Method_DeleteInvite, serviceImpl.DeleteInvite)
          .AddMethod(__Method_UpdateInvite, serviceImpl.UpdateInvite)
          .AddMethod(__Method_GetInvite, serviceImpl.GetInvite)
          .AddMethod(__Method_ListAllInvites, serviceImpl.ListAllInvites).Build();
    }

    /// <summary>Register service method with a service binder with or without implementation. Useful when customizing the  service binding logic.
    /// Note: this method is part of an experimental API that can change or be removed without any prior notice.</summary>
    /// <param name="serviceBinder">Service methods will be bound by calling <c>AddMethod</c> on this object.</param>
    /// <param name="serviceImpl">An object implementing the server-side handling logic.</param>
    public static void BindService(grpc::ServiceBinderBase serviceBinder, InviteServiceBase serviceImpl)
    {
      serviceBinder.AddMethod(__Method_CreateInvite, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Improbable.OnlineServices.Proto.Invite.CreateInviteRequest, global::Improbable.OnlineServices.Proto.Invite.CreateInviteResponse>(serviceImpl.CreateInvite));
      serviceBinder.AddMethod(__Method_DeleteInvite, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Improbable.OnlineServices.Proto.Invite.DeleteInviteRequest, global::Improbable.OnlineServices.Proto.Invite.DeleteInviteResponse>(serviceImpl.DeleteInvite));
      serviceBinder.AddMethod(__Method_UpdateInvite, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Improbable.OnlineServices.Proto.Invite.UpdateInviteRequest, global::Improbable.OnlineServices.Proto.Invite.UpdateInviteResponse>(serviceImpl.UpdateInvite));
      serviceBinder.AddMethod(__Method_GetInvite, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Improbable.OnlineServices.Proto.Invite.GetInviteRequest, global::Improbable.OnlineServices.Proto.Invite.GetInviteResponse>(serviceImpl.GetInvite));
      serviceBinder.AddMethod(__Method_ListAllInvites, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Improbable.OnlineServices.Proto.Invite.ListAllInvitesRequest, global::Improbable.OnlineServices.Proto.Invite.ListAllInvitesResponse>(serviceImpl.ListAllInvites));
    }

  }
}
#endregion
